{"version":3,"sources":["../../../../node_modules/.pnpm/request-ip@3.3.0/node_modules/request-ip/lib/is.js","../../../../node_modules/.pnpm/request-ip@3.3.0/node_modules/request-ip/lib/index.js","../index.ts","../../sdk/index.ts"],"sourcesContent":["\"use strict\";\n\nvar regexes = {\n  ipv4: /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/,\n  ipv6: /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i\n};\n\nfunction not(func) {\n  return function () {\n    return !func.apply(null, Array.prototype.slice.call(arguments));\n  };\n}\n\nfunction existy(value) {\n  return value != null;\n}\n\nfunction ip(value) {\n  return existy(value) && regexes.ipv4.test(value) || regexes.ipv6.test(value);\n}\n\nfunction object(value) {\n  return Object(value) === value;\n}\n\nfunction string(value) {\n  return Object.prototype.toString.call(value) === '[object String]';\n}\n\nvar is = {\n  existy: existy,\n  ip: ip,\n  object: object,\n  string: string,\n  not: {\n    existy: not(existy),\n    ip: not(ip),\n    object: not(object),\n    string: not(string)\n  }\n};\nmodule.exports = is;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar is = require('./is');\n\nfunction getClientIpFromXForwardedFor(value) {\n  if (!is.existy(value)) {\n    return null;\n  }\n\n  if (is.not.string(value)) {\n    throw new TypeError(\"Expected a string, got \\\"\".concat(_typeof(value), \"\\\"\"));\n  }\n\n  var forwardedIps = value.split(',').map(function (e) {\n    var ip = e.trim();\n\n    if (ip.includes(':')) {\n      var splitted = ip.split(':');\n\n      if (splitted.length === 2) {\n        return splitted[0];\n      }\n    }\n\n    return ip;\n  });\n\n  for (var i = 0; i < forwardedIps.length; i++) {\n    if (is.ip(forwardedIps[i])) {\n      return forwardedIps[i];\n    }\n  }\n\n  return null;\n}\n\nfunction getClientIp(req) {\n  if (req.headers) {\n    if (is.ip(req.headers['x-client-ip'])) {\n      return req.headers['x-client-ip'];\n    }\n\n    var xForwardedFor = getClientIpFromXForwardedFor(req.headers['x-forwarded-for']);\n\n    if (is.ip(xForwardedFor)) {\n      return xForwardedFor;\n    }\n\n    if (is.ip(req.headers['cf-connecting-ip'])) {\n      return req.headers['cf-connecting-ip'];\n    }\n\n    if (is.ip(req.headers['fastly-client-ip'])) {\n      return req.headers['fastly-client-ip'];\n    }\n\n    if (is.ip(req.headers['true-client-ip'])) {\n      return req.headers['true-client-ip'];\n    }\n\n    if (is.ip(req.headers['x-real-ip'])) {\n      return req.headers['x-real-ip'];\n    }\n\n    if (is.ip(req.headers['x-cluster-client-ip'])) {\n      return req.headers['x-cluster-client-ip'];\n    }\n\n    if (is.ip(req.headers['x-forwarded'])) {\n      return req.headers['x-forwarded'];\n    }\n\n    if (is.ip(req.headers['forwarded-for'])) {\n      return req.headers['forwarded-for'];\n    }\n\n    if (is.ip(req.headers.forwarded)) {\n      return req.headers.forwarded;\n    }\n\n    if (is.ip(req.headers['x-appengine-user-ip'])) {\n      return req.headers['x-appengine-user-ip'];\n    }\n  }\n\n  if (is.existy(req.connection)) {\n    if (is.ip(req.connection.remoteAddress)) {\n      return req.connection.remoteAddress;\n    }\n\n    if (is.existy(req.connection.socket) && is.ip(req.connection.socket.remoteAddress)) {\n      return req.connection.socket.remoteAddress;\n    }\n  }\n\n  if (is.existy(req.socket) && is.ip(req.socket.remoteAddress)) {\n    return req.socket.remoteAddress;\n  }\n\n  if (is.existy(req.info) && is.ip(req.info.remoteAddress)) {\n    return req.info.remoteAddress;\n  }\n\n  if (is.existy(req.requestContext) && is.existy(req.requestContext.identity) && is.ip(req.requestContext.identity.sourceIp)) {\n    return req.requestContext.identity.sourceIp;\n  }\n\n  if (req.headers) {\n    if (is.ip(req.headers['Cf-Pseudo-IPv4'])) {\n      return req.headers['Cf-Pseudo-IPv4'];\n    }\n  }\n\n  if (is.existy(req.raw)) {\n    return getClientIp(req.raw);\n  }\n\n  return null;\n}\n\nfunction mw(options) {\n  var configuration = is.not.existy(options) ? {} : options;\n\n  if (is.not.object(configuration)) {\n    throw new TypeError('Options must be an object!');\n  }\n\n  var attributeName = configuration.attributeName || 'clientIp';\n  return function (req, res, next) {\n    var ip = getClientIp(req);\n    Object.defineProperty(req, attributeName, {\n      get: function get() {\n        return ip;\n      },\n      configurable: true\n    });\n    next();\n  };\n}\n\nmodule.exports = {\n  getClientIpFromXForwardedFor: getClientIpFromXForwardedFor,\n  getClientIp: getClientIp,\n  mw: mw\n};","import type { NextFunction, Request, Response } from 'express';\nimport { getClientIp } from 'request-ip';\n\nimport type { OpenpanelSdkOptions } from '@openpanel/sdk';\nimport { OpenpanelSdk } from '@openpanel/sdk';\n\nexport * from '@openpanel/sdk';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Express {\n    export interface Request {\n      op: OpenpanelSdk;\n    }\n  }\n}\n\nexport type OpenpanelOptions = OpenpanelSdkOptions & {\n  trackRequest?: (url: string) => boolean;\n  getProfileId?: (req: Request) => string;\n};\n\nexport default function createMiddleware(options: OpenpanelOptions) {\n  return function middleware(req: Request, res: Response, next: NextFunction) {\n    const sdk = new OpenpanelSdk(options);\n    const ip = getClientIp(req);\n    if (ip) {\n      sdk.api.headers['x-forwarded-for'] = ip;\n    }\n\n    if (options.getProfileId) {\n      const profileId = options.getProfileId(req);\n      if (profileId) {\n        sdk.setProfileId(profileId);\n      }\n    }\n\n    if (options.trackRequest?.(req.url)) {\n      sdk.event('request', {\n        url: req.url,\n        method: req.method,\n        query: req.query,\n      });\n    }\n\n    req.op = sdk;\n\n    return next();\n  };\n}\n","export interface OpenpanelEventOptions {\n  profileId?: string;\n}\n\nexport interface PostEventPayload {\n  name: string;\n  timestamp: string;\n  deviceId?: string;\n  profileId?: string;\n  properties?: Record<string, unknown> & OpenpanelEventOptions;\n}\n\nexport interface UpdateProfilePayload {\n  profileId: string;\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  avatar?: string;\n  properties?: Record<string, unknown>;\n}\n\nexport interface IncrementProfilePayload {\n  profileId: string;\n  property: string;\n  value: number;\n}\n\nexport interface DecrementProfilePayload {\n  profileId?: string;\n  property: string;\n  value: number;\n}\n\nexport interface OpenpanelSdkOptions {\n  url?: string;\n  clientId: string;\n  clientSecret?: string;\n  verbose?: boolean;\n  setDeviceId?: (deviceId: string) => void;\n  getDeviceId?: () => string | null | undefined;\n  removeDeviceId?: () => void;\n}\n\nexport interface OpenpanelState {\n  deviceId?: string;\n  profileId?: string;\n  properties: Record<string, unknown>;\n}\n\nfunction awaitProperties(\n  properties: Record<string, string | Promise<string | null>>\n): Promise<Record<string, string>> {\n  return Promise.all(\n    Object.entries(properties).map(async ([key, value]) => {\n      return [key, (await value) ?? ''];\n    })\n  ).then((entries) => Object.fromEntries(entries));\n}\n\nfunction createApi(_url: string) {\n  const headers: Record<string, string | Promise<string | null>> = {\n    'Content-Type': 'application/json',\n  };\n  return {\n    headers,\n    async fetch<ReqBody, ResBody>(\n      path: string,\n      data: ReqBody,\n      options?: RequestInit\n    ): Promise<ResBody | null> {\n      const url = `${_url}${path}`;\n      let timer: ReturnType<typeof setTimeout>;\n      const h = await awaitProperties(headers);\n      return new Promise((resolve) => {\n        const wrappedFetch = (attempt: number) => {\n          clearTimeout(timer);\n          fetch(url, {\n            headers: h,\n            method: 'POST',\n            body: JSON.stringify(data ?? {}),\n            keepalive: true,\n            ...(options ?? {}),\n          })\n            .then(async (res) => {\n              if (res.status === 401) {\n                return null;\n              }\n\n              if (res.status !== 200 && res.status !== 202) {\n                return retry(attempt, resolve);\n              }\n\n              const response = await res.text();\n\n              if (!response) {\n                return resolve(null);\n              }\n\n              resolve(response as ResBody);\n            })\n            .catch(() => {\n              return retry(attempt, resolve);\n            });\n        };\n\n        function retry(\n          attempt: number,\n          resolve: (value: ResBody | null) => void\n        ) {\n          if (attempt > 1) {\n            return resolve(null);\n          }\n\n          timer = setTimeout(\n            () => {\n              wrappedFetch(attempt + 1);\n            },\n            Math.pow(2, attempt) * 500\n          );\n        }\n\n        wrappedFetch(0);\n      });\n    },\n  };\n}\n\nexport class OpenpanelSdk<\n  Options extends OpenpanelSdkOptions = OpenpanelSdkOptions,\n> {\n  public options: Options;\n  public api: ReturnType<typeof createApi>;\n  private state: OpenpanelState = {\n    properties: {},\n  };\n\n  constructor(options: Options) {\n    this.options = options;\n    this.api = createApi(options.url ?? 'https://api.openpanel.dev');\n    this.api.headers['openpanel-client-id'] = options.clientId;\n    if (this.options.clientSecret) {\n      this.api.headers['openpanel-client-secret'] = this.options.clientSecret;\n    }\n  }\n\n  // Public\n\n  public setProfileId(profileId: string) {\n    this.state.profileId = profileId;\n  }\n\n  public setProfile(payload: UpdateProfilePayload) {\n    this.setProfileId(payload.profileId);\n    this.api.fetch<UpdateProfilePayload, string>('/profile', {\n      ...payload,\n      properties: {\n        ...this.state.properties,\n        ...payload.properties,\n      },\n    });\n  }\n\n  public increment(\n    property: string,\n    value: number,\n    options?: OpenpanelEventOptions\n  ) {\n    const profileId = options?.profileId ?? this.state.profileId;\n    if (!profileId) {\n      return console.log('No profile id');\n    }\n    this.api.fetch<IncrementProfilePayload, string>('/profile/increment', {\n      profileId,\n      property,\n      value,\n    });\n  }\n\n  public decrement(\n    property: string,\n    value: number,\n    options?: OpenpanelEventOptions\n  ) {\n    const profileId = options?.profileId ?? this.state.profileId;\n    if (!profileId) {\n      return console.log('No profile id');\n    }\n    this.api.fetch<DecrementProfilePayload, string>('/profile/decrement', {\n      profileId,\n      property,\n      value,\n    });\n  }\n\n  public event(name: string, properties?: PostEventPayload['properties']) {\n    const profileId = properties?.profileId ?? this.state.profileId;\n    delete properties?.profileId;\n    this.api\n      .fetch<PostEventPayload, string>('/event', {\n        name,\n        properties: {\n          ...this.state.properties,\n          ...(properties ?? {}),\n        },\n        timestamp: this.timestamp(),\n        deviceId: this.getDeviceId(),\n        profileId,\n      })\n      .then((deviceId) => {\n        if (this.options.setDeviceId && deviceId) {\n          this.options.setDeviceId(deviceId);\n        }\n      });\n  }\n\n  public setGlobalProperties(properties: Record<string, unknown>) {\n    this.state.properties = {\n      ...this.state.properties,\n      ...properties,\n    };\n  }\n\n  public clear() {\n    this.state.deviceId = undefined;\n    this.state.profileId = undefined;\n    if (this.options.removeDeviceId) {\n      this.options.removeDeviceId();\n    }\n  }\n\n  // Private\n\n  private timestamp() {\n    return new Date().toISOString();\n  }\n\n  private getDeviceId() {\n    if (this.state.deviceId) {\n      return this.state.deviceId;\n    } else if (this.options.getDeviceId) {\n      this.state.deviceId = this.options.getDeviceId() || undefined;\n    }\n  }\n}\n"],"mappings":"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","names":["require_is","__commonJSMin","exports","module","regexes","not","func","existy","value","ip","object","string","is","require_lib","__commonJSMin","exports","module","_typeof","obj","is","getClientIpFromXForwardedFor","value","forwardedIps","e","ip","splitted","getClientIp","req","xForwardedFor","mw","options","configuration","attributeName","res","next","import_request_ip","awaitProperties","properties","key","value","entries","createApi","_url","headers","path","data","options","url","timer","h","resolve","wrappedFetch","attempt","res","retry","response","OpenpanelSdk","profileId","payload","property","name","deviceId","createMiddleware","options","req","res","next","sdk","f","ip","profileId"]}
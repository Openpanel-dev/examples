interface OpenpanelEventOptions {
    profileId?: string;
}
interface PostEventPayload {
    name: string;
    timestamp: string;
    deviceId?: string;
    profileId?: string;
    properties?: Record<string, unknown> & OpenpanelEventOptions;
}
interface UpdateProfilePayload {
    profileId: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    avatar?: string;
    properties?: Record<string, unknown>;
}
interface IncrementProfilePayload {
    profileId: string;
    property: string;
    value: number;
}
interface DecrementProfilePayload {
    profileId?: string;
    property: string;
    value: number;
}
interface OpenpanelSdkOptions {
    url?: string;
    clientId: string;
    clientSecret?: string;
    verbose?: boolean;
    setDeviceId?: (deviceId: string) => void;
    getDeviceId?: () => string | null | undefined;
    removeDeviceId?: () => void;
}
interface OpenpanelState {
    deviceId?: string;
    profileId?: string;
    properties: Record<string, unknown>;
}
declare function createApi(_url: string): {
    headers: Record<string, string | Promise<string | null>>;
    fetch<ReqBody, ResBody>(path: string, data: ReqBody, options?: RequestInit): Promise<ResBody | null>;
};
declare class OpenpanelSdk<Options extends OpenpanelSdkOptions = OpenpanelSdkOptions> {
    options: Options;
    api: ReturnType<typeof createApi>;
    private state;
    constructor(options: Options);
    setProfileId(profileId: string): void;
    setProfile(payload: UpdateProfilePayload): void;
    increment(property: string, value: number, options?: OpenpanelEventOptions): void;
    decrement(property: string, value: number, options?: OpenpanelEventOptions): void;
    event(name: string, properties?: PostEventPayload['properties']): void;
    setGlobalProperties(properties: Record<string, unknown>): void;
    clear(): void;
    private timestamp;
    private getDeviceId;
}

export { type DecrementProfilePayload, type IncrementProfilePayload, type OpenpanelEventOptions, OpenpanelSdk, type OpenpanelSdkOptions, type OpenpanelState, type PostEventPayload, type UpdateProfilePayload };
